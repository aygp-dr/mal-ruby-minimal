Context and Details for Step 0 REPL Implementation

BACKGROUND:
Starting MAL (Make a Lisp) implementation following the step-by-step guide.
Step 0 is the simplest possible REPL that just echoes input back.

CHANGES MADE:
1. Created step0_repl.rb with READ/EVAL/PRINT/rep functions
2. READ just returns the input string unchanged
3. EVAL returns the AST unchanged (no evaluation yet)
4. PRINT returns the expression unchanged
5. Main loop reads from stdin and prints back

TESTING:
Manual testing shows echo behavior works correctly:
- Input: hello -> Output: hello
- Input: (+ 1 2) -> Output: (+ 1 2)
- EOF (Ctrl-D) exits cleanly

PRECONDITIONS:
- Ruby 3.3.8 environment
- No external dependencies
- Following MAL guide structure

POSTCONDITIONS:
- Basic REPL loop established
- Foundation for adding parsing and evaluation

DEVIATIONS:
None - follows MAL guide exactly for step 0

FOLLOW-UP:
Step 1 will add actual parsing using the reader.rb module
